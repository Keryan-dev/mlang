##################################################
# Variables
##################################################

SELF_DIR=$(realpath $(dir $(realpath $(lastword $(MAKEFILE_LIST)))))

-include $(SELF_DIR)/Makefile.config

define source_dir
	$(shell find $(1) -name \*.m ! -name err\*.m ! -name tgv\*.m | sort) $(1)errI.m $(1)tgvI.m
endef

SOURCE_DIR_2015=$(call source_dir,$(SELF_DIR)/ir-calcul/sources2015m_4_6/)
SOURCE_DIR_2016=$(call source_dir,$(SELF_DIR)/ir-calcul/sources2016m_4_5/)
SOURCE_DIR_2017=$(call source_dir,$(SELF_DIR)/ir-calcul/sources2017m_6_10/)
SOURCE_DIR_2018=$(call source_dir,$(SELF_DIR)/ir-calcul/sources2018m_6_7/)
SOURCE_DIR_2019=$(call source_dir,$(SELF_DIR)/ir-calcul/sources2019m_8_0/)
SOURCE_DIR_2020=$(call source_dir,$(SELF_DIR)/ir-calcul/sources2020m_6_5/)

YEAR?=2020

ifeq ($(YEAR), 2018)
	SOURCE_FILES?=$(SOURCE_DIR_2018)
	MPP_FILE?=$(SELF_DIR)/mpp_specs/2018_6_7.mpp
	TESTS_DIR?=$(SELF_DIR)/tests/2018/fuzzing/
	M_SPEC_FILE?=$(SELF_DIR)/m_specs/complex_case_with_ins_outs_2018.m_spec
	MPP_FUNCTION?=compute_double_liquidation_pvro
else ifeq ($(YEAR), 2019)
	SOURCE_FILES?=$(SOURCE_DIR_2019)
	MPP_FILE?=$(SELF_DIR)/mpp_specs/2019_8_0.mpp
	TESTS_DIR?=$(SELF_DIR)/tests/2019/fuzzing/
	M_SPEC_FILE?=m_specs/complex_case_with_ins_outs_2019.m_spec
	MPP_FUNCTION?=compute_double_liquidation_pvro
else ifeq ($(YEAR), 2020)
	SOURCE_FILES?=$(SOURCE_DIR_2020)
	MPP_FILE?=$(SELF_DIR)/mpp_specs/2020_6_5.mpp
	TESTS_DIR?=$(SELF_DIR)/tests/2020/fuzzing/
	M_SPEC_FILE?=$(SELF_DIR)/m_specs/complex_case_with_ins_outs_2020.m_spec
	MPP_FUNCTION?=compute_double_liquidation_pvro
else
 	$(warning WARNING: there is no default configuration for year: $(YEAR))
    $(warning WARNING: example specification files and fuzzer tests are not included for year: $(YEAR))
endif

C_COMPILER?=clang

ifeq ($(OPTIMIZE), 0)
    OPTIMIZE_FLAG=
else
    OPTIMIZE_FLAG=-O
endif

MLANG_BIN=dune exec $(SELF_DIR)/_build/default/src/main.exe --
PRECISION?=double

MLANG_DEFAULT_OPTS=\
	--display_time --debug \
	--precision $(PRECISION) \
	$(OPTIMIZE_FLAG)
